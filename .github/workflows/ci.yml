name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: Checkout project
      uses: actions/checkout@v2

    - name: Set up wasi-sdk (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        curl -LO https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-11/wasi-sdk-11.0-linux.tar.gz
        tar -xf wasi-sdk-11.0-linux.tar.gz
        mv wasi-sdk-11.0 /opt/wasi-sdk
        echo "::add-path::/opt/wasi-sdk/bin"

    - name: Set up wasi-sdk (MacOS)
      if: matrix.os == 'macos-latest'
      run: |
        curl -LO https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-11/wasi-sdk-11.0-macos.tar.gz
        tar -xf wasi-sdk-11.0-macos.tar.gz
        mv wasi-sdk-11.0 /opt/wasi-sdk
        echo "::add-path::/opt/wasi-sdk/bin"

    - name: Set up wasi-sdk (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        curl -LO https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-11/wasi-sdk-11.0-mingw.tar.gz
        tar -xf wasi-sdk-11.0-mingw.tar.gz
        mv wasi-sdk-11.0 c:/wasi-sdk
        echo "::add-path::c:/wasi-sdk/bin"

    - name: Set up deno
      run: bash .github/scripts/setup_deno.sh

    - name: Run tests
      run: deno test -A
